
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000148  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000148  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000178  2**2
                  CONTENTS, READONLY
  4 .debug_info   0000052e  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004e7  00000000  00000000  000006e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000116  00000000  00000000  00000bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000001af  00000000  00000000  00000cdf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 50 00 	call	0xa0	; 0xa0 <main>
  64:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <ADC_Init>:
  6c:	8a b3       	in	r24, 0x1a	; 26
  6e:	8e 7f       	andi	r24, 0xFE	; 254
  70:	8a bb       	out	0x1a, r24	; 26
  72:	80 e4       	ldi	r24, 0x40	; 64
  74:	87 b9       	out	0x07, r24	; 7
  76:	83 e8       	ldi	r24, 0x83	; 131
  78:	86 b9       	out	0x06, r24	; 6
  7a:	08 95       	ret

0000007c <ADC_Read>:
  7c:	86 b1       	in	r24, 0x06	; 6
  7e:	80 64       	ori	r24, 0x40	; 64
  80:	86 b9       	out	0x06, r24	; 6
  82:	36 99       	sbic	0x06, 6	; 6
  84:	fe cf       	rjmp	.-4      	; 0x82 <ADC_Read+0x6>
  86:	24 b1       	in	r18, 0x04	; 4
  88:	65 b1       	in	r22, 0x05	; 5
  8a:	70 e0       	ldi	r23, 0x00	; 0
  8c:	76 2f       	mov	r23, r22
  8e:	66 27       	eor	r22, r22
  90:	cb 01       	movw	r24, r22
  92:	77 0f       	add	r23, r23
  94:	aa 0b       	sbc	r26, r26
  96:	bb 0b       	sbc	r27, r27
  98:	bc 01       	movw	r22, r24
  9a:	cd 01       	movw	r24, r26
  9c:	62 2b       	or	r22, r18
  9e:	08 95       	ret

000000a0 <main>:
  a0:	0e 94 63 00 	call	0xc6	; 0xc6 <uart_init>
  a4:	0e 94 36 00 	call	0x6c	; 0x6c <ADC_Init>
  a8:	0e 94 3e 00 	call	0x7c	; 0x7c <ADC_Read>
  ac:	86 2f       	mov	r24, r22
  ae:	0e 94 74 00 	call	0xe8	; 0xe8 <uart_transmit>
  b2:	2f ef       	ldi	r18, 0xFF	; 255
  b4:	8f e7       	ldi	r24, 0x7F	; 127
  b6:	96 e1       	ldi	r25, 0x16	; 22
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	80 40       	sbci	r24, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x18>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x22>
  c2:	00 00       	nop
  c4:	f1 cf       	rjmp	.-30     	; 0xa8 <main+0x8>

000000c6 <uart_init>:
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	82 60       	ori	r24, 0x02	; 2
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	81 b3       	in	r24, 0x11	; 17
  ce:	8e 7f       	andi	r24, 0xFE	; 254
  d0:	81 bb       	out	0x11, r24	; 17
  d2:	80 b5       	in	r24, 0x20	; 32
  d4:	8f 77       	andi	r24, 0x7F	; 127
  d6:	80 bd       	out	0x20, r24	; 32
  d8:	10 bc       	out	0x20, r1	; 32
  da:	87 e0       	ldi	r24, 0x07	; 7
  dc:	89 b9       	out	0x09, r24	; 9
  de:	88 e9       	ldi	r24, 0x98	; 152
  e0:	8a b9       	out	0x0a, r24	; 10
  e2:	86 e8       	ldi	r24, 0x86	; 134
  e4:	80 bd       	out	0x20, r24	; 32
  e6:	08 95       	ret

000000e8 <uart_transmit>:
  e8:	5d 9b       	sbis	0x0b, 5	; 11
  ea:	fe cf       	rjmp	.-4      	; 0xe8 <uart_transmit>
  ec:	8c b9       	out	0x0c, r24	; 12
  ee:	08 95       	ret

000000f0 <_exit>:
  f0:	f8 94       	cli

000000f2 <__stop_program>:
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <__stop_program>
